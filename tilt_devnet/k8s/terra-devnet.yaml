apiVersion: v1
kind: Service
metadata:
  labels:
    app: terra-terrad
  name: terra-terrad
spec:
  ports:
    - name: rpc
      port: 26657
      protocol: TCP
    - name: rest
      port: 1317
      protocol: TCP
  selector:
    app: terra-terrad
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: terra-postgres
  name: terra-postgres
spec:
  ports:
    - name: postgres
      port: 5432
      protocol: TCP
  selector:
    app: terra-postgres
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: terra-fcd
  name: terra-fcd
spec:
  ports:
    - name: fcd
      port: 3060
      protocol: TCP
  selector:
    app: terra-fcd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: terra-terrad
  name: terra-terrad
spec:
  replicas: 1
  selector:
    matchLabels:
      app: terra-terrad
  template:
    metadata:
      labels:
        app: terra-terrad
    spec:
      initContainers:
        # Before starting terrad, copy the config and validator state files from
        # the image to the volume with write access. Otherwise terrad will
        # either try to write to a read-only directory, or not find the files
        # because they are shadowed by the volume mount.
        - name: copy-config
          image: terra-image
          command:
            - /bin/sh
            - -c
            - |-
              mkdir -p /var/terra/config &&
              mkdir -p /var/terra/data &&
              cp /root/.terra/config/* /var/terra/config/ &&
              cp /root/.terra/data/priv_validator_state.json /var/terra/data/ &&
              true
          volumeMounts:
            - name: terra-data
              mountPath: /var/terra
      containers:
        - args:
            - terrad
            - start
            - --home
            - /var/terra
          image: terra-image
          name: terra-terrad
          ports:
            - containerPort: 26657
            - containerPort: 1317
          readinessProbe:
            httpGet:
              port: 26657
          resources:
            requests:
              cpu: 250m
              memory: 1Gi
            limits:
              cpu: 500m
              memory: 2Gi
          volumeMounts:
            - name: terra-data
              mountPath: /var/terra
        - name: cosmwasm-contracts
          image: cosmwasm-contracts
          command:
            - /bin/sh
            - -c
            - "sh /app/tools/deploy.sh && touch /tmp/success && sleep infinity"
          volumeMounts:
            - name: tmp
              mountPath: /tmp
          readinessProbe:
            exec:
              command:
                - test
                - -e
                - /tmp/success
            initialDelaySeconds: 5
            periodSeconds: 5
      volumes:
        - name: terra-data
          emptyDir:
            sizeLimit: 3Gi
        - name: tmp
          emptyDir:
            sizeLimit: 1Gi
      restartPolicy: Always
  serviceName: terra-terrad
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: terra-postgres
  name: terra-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: terra-postgres
  template:
    metadata:
      labels:
        app: terra-postgres
    spec:
      containers:
        - image: postgres:12
          name: fcd-postgres
          ports:
            - containerPort: 5432
          resources: {}
          env:
            - name: POSTGRES_USER
              value: dev
            - name: POSTGRES_PASSWORD
              value: dev
            - name: POSTGRES_DB
              value: fcd
          volumeMounts:
            - name: postgres-lib
              mountPath: /var/lib/postgresql
            - name: postgres-run
              mountPath: /var/run/postgresql
      volumes:
        - name: postgres-lib
          emptyDir:
            sizeLimit: 1Gi
        - name: postgres-run
          emptyDir:
            sizeLimit: 1Mi
      restartPolicy: Always
  serviceName: terra-fcd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: terra-fcd
  name: terra-fcd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: terra-fcd
  template:
    metadata:
      labels:
        app: terra-fcd
    spec:
      initContainers:
        # Copy the app to a separate directory that can be mounted with write
        # permissions because the entrypoint of fcd-collector writes to /app/static
        - name: copy-app
          image: terramoney/fcd:2.0.5
          command:
            - /bin/sh
            - -c
            - cp -R /app/* /var/app/ && true
          volumeMounts:
            - name: app
              mountPath: /var/app
      containers:
        - image: terramoney/fcd:2.0.5
          name: fcd-collector
          args:
            - collector
          volumeMounts:
            - name: app
              mountPath: /app
          resources: {}
          env:
            - name: CHAIN_ID
              value: localterra
            - name: LCD_URI
              value: http://terra-terrad:1317
            - name: BYPASS_URI
              value: http://terra-terrad:1317
            - name: RPC_URI
              value: http://terra-terrad:26657
            - name: TYPEORM_CONNECTION
              value: postgres
            - name: TYPEORM_HOST
              value: terra-postgres
            - name: TYPEORM_USERNAME
              value: dev
            - name: TYPEORM_PASSWORD
              value: dev
            - name: TYPEORM_DATABASE
              value: fcd
            - name: TYPEORM_SYNCHRONIZE
              value: "true"
            - name: TYPEORM_LOGGING
              value: "false"
            - name: TYPEORM_ENTITIES
              value: "src/orm/*Entity.ts"
        - image: terramoney/fcd:2.0.5
          name: fcd-api
          args:
            - start
          volumeMounts:
            - name: app
              mountPath: /app
          resources: {}
          ports:
            - containerPort: 3060
          env:
            - name: CHAIN_ID
              value: localterra
            - name: LCD_URI
              value: http://terra-terrad:1317
            - name: BYPASS_URI
              value: http://terra-terrad:1317
            - name: RPC_URI
              value: http://terra-terrad:26657
            - name: TYPEORM_CONNECTION
              value: postgres
            - name: TYPEORM_HOST
              value: terra-postgres
            - name: TYPEORM_USERNAME
              value: dev
            - name: TYPEORM_PASSWORD
              value: dev
            - name: TYPEORM_DATABASE
              value: fcd
            - name: TYPEORM_SYNCHRONIZE
              value: "true"
            - name: TYPEORM_LOGGING
              value: "false"
            - name: TYPEORM_ENTITIES
              value: "src/orm/*Entity.ts"
      volumes:
        - name: app
          emptyDir:
            sizeLimet: 3Gi
      restartPolicy: Always
  serviceName: terra-fcd
