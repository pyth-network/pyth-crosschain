FROM docker.io/golang:1.17.0-alpine as builder
RUN apk add --no-cache gcc linux-headers alpine-sdk

ARG APP_DIR=/app
COPY . $APP_DIR

WORKDIR $APP_DIR/tools
RUN CGO_ENABLED=0 ./build.sh

WORKDIR $APP_DIR
RUN tools/bin/buf lint && tools/bin/buf generate

WORKDIR $APP_DIR/node/tools
RUN go build -mod=readonly -o /dlv github.com/go-delve/delve/cmd/dlv

WORKDIR $APP_DIR/node
RUN go build -race -gcflags="all=-N -l" -mod=readonly -o /guardiand github.com/certusone/wormhole/node

FROM docker.io/golang:1.17.0-alpine
ARG APP_DIR=/app

WORKDIR $APP_DIR
COPY --from=builder /guardiand /guardiand

RUN addgroup -S pyth -g 10001 && adduser -h $APP_DIR -S pyth -G pyth -u 10001
RUN chown -R pyth:pyth .
USER pyth

ENTRYPOINT [ "/guardiand", "spy", "--nodeKey", "/tmp/node.key" ]
