/*
 * hermes
 *
 * Hermes is an agent that provides Verified Prices from the Pythnet Pyth Oracle.
 *
 * The version of the OpenAPI document: 0.8.6
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// RpcPrice : A price with a degree of uncertainty at a certain time, represented as a price +- a confidence interval.  The confidence interval roughly corresponds to the standard error of a normal distribution. Both the price and confidence are stored in a fixed-point numeric representation, `x * 10^expo`, where `expo` is the exponent. For example:
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RpcPrice {
    /// The confidence interval associated with the price, stored as a string to avoid precision loss
    #[serde(rename = "conf")]
    pub conf: String,
    /// The exponent associated with both the price and confidence interval. Multiply those values by `10^expo` to get the real value.
    #[serde(rename = "expo")]
    pub expo: i32,
    /// The price itself, stored as a string to avoid precision loss
    #[serde(rename = "price")]
    pub price: String,
    /// When the price was published. The `publish_time` is a unix timestamp, i.e., the number of seconds since the Unix epoch (00:00:00 UTC on 1 Jan 1970).
    #[serde(rename = "publish_time")]
    pub publish_time: i64,
}

impl RpcPrice {
    /// A price with a degree of uncertainty at a certain time, represented as a price +- a confidence interval.  The confidence interval roughly corresponds to the standard error of a normal distribution. Both the price and confidence are stored in a fixed-point numeric representation, `x * 10^expo`, where `expo` is the exponent. For example:
    pub fn new(conf: String, expo: i32, price: String, publish_time: i64) -> RpcPrice {
        RpcPrice {
            conf,
            expo,
            price,
            publish_time,
        }
    }
}

