/*
 * hermes
 *
 * Hermes is an agent that provides Verified Prices from the Pythnet Pyth Oracle.
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct RpcPriceFeedMetadata {
    #[serde(rename = "emitter_chain")]
    pub emitter_chain: i32,
    #[serde(
        rename = "prev_publish_time",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub prev_publish_time: Option<Option<i64>>,
    #[serde(
        rename = "price_service_receive_time",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub price_service_receive_time: Option<Option<i64>>,
    #[serde(
        rename = "slot",
        default,
        with = "::serde_with::rust::double_option",
        skip_serializing_if = "Option::is_none"
    )]
    pub slot: Option<Option<i64>>,
}

impl RpcPriceFeedMetadata {
    pub fn new(emitter_chain: i32) -> RpcPriceFeedMetadata {
        RpcPriceFeedMetadata {
            emitter_chain,
            prev_publish_time: None,
            price_service_receive_time: None,
            slot: None,
        }
    }
}
