/*
 * hermes
 *
 * Hermes is an agent that provides Verified Prices from the Pythnet Pyth Oracle.
 *
 * The version of the OpenAPI document: 0.8.6
 *
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ParsedPriceFeedTwap {
    /// The % of slots where the network was down over the TWAP window. A value of zero indicates no slots were missed over the window, and a value of one indicates that every slot was missed over the window. This is a float value stored as a string to avoid precision loss.
    #[serde(rename = "down_slots_ratio")]
    pub down_slots_ratio: String,
    /// The end unix timestamp of the window
    #[serde(rename = "end_timestamp")]
    pub end_timestamp: i64,
    #[serde(rename = "id")]
    pub id: String,
    /// The start unix timestamp of the window
    #[serde(rename = "start_timestamp")]
    pub start_timestamp: i64,
    #[serde(rename = "twap")]
    pub twap: Box<models::RpcPrice>,
}

impl ParsedPriceFeedTwap {
    pub fn new(
        down_slots_ratio: String,
        end_timestamp: i64,
        id: String,
        start_timestamp: i64,
        twap: models::RpcPrice,
    ) -> ParsedPriceFeedTwap {
        ParsedPriceFeedTwap {
            down_slots_ratio,
            end_timestamp,
            id,
            start_timestamp,
            twap: Box::new(twap),
        }
    }
}
